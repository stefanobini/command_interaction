# To read: https://docs.nvidia.com/deeplearning/frameworks/user-guide/index.html

# ROS framework
source /opt/ros/melodic/setup.bash  # create workspace
catkin_make                         # configure workspace

source devel/setup.bash

roscore
rosrun comunication_pkg cobot1_node.py
rosrun firos core.py --conf src/firos/config
rostopic echo comunication_pkg/Speech

# Automatically update date
sudo date -s "$(wget -qSO- --max-redirect=0 google.com 2>&1 | grep Date: | cut -d' ' -f5-8)Z"

# Network
watch -n1 iwconfig  # Signal power
nmcli dev wifi  # List of network

# Docker for SPEECH DEMO
sudo docker build -t docker_felice_demo . --network=host
sudo docker run --rm --privileged --device /dev/snd --volume=/dev:/dev --volume=/home/felice/speech-command_interaction:/home/felice/speech-command_interaction --runtime nvidia --network="host" -dit --name felice_demo docker_felice_demo7
sudo docker run --rm --privileged --device /dev/snd --volume=/dev:/dev --volume=/media/aaeon/ext_dev/speech-command_interaction:/home/felice/speech-command_interaction --runtime nvidia --network="host" -dit --name felice_demo docker_felice_demo7
sudo docker exec -it felice_demo  /bin/bash

# Docker for WHOLE DEMO
sudo docker build -t docker_command_demo . --network=host
sudo docker run --rm --privileged --device /dev/snd --volume=/dev:/dev --volume=/home/felice/command_interaction/ROS:/home/felice/command_interaction/ROS --network="host" --runtime nvidia -dit --name command_demo docker_command_demo
felice
sudo docker exec -it command_demo  /bin/bash

# Docker for IRI Lab
sudo docker build -t docker_msi_demo . --network=host
sudo docker run --rm --privileged --device /dev/snd --volume=/dev:/dev --volume=/home/irilab/command_interaction/ROS:/home/felice/command_interaction/ROS --network="host" --runtime nvidia -dit --name msi_demo docker_msi_demo
sudo docker exec -it msi_demo  /bin/bash


# to load pretrained model (it needs for compatibility reasons)
mkdir -p /root/.cache/torch/hub/checkpoints/
cp /home/felice/command_interaction/ROS/hri_ws/src/gesture_pkg/models/mobilenet_v3_large-8738ca79.pth /root/.cache/torch/hub/checkpoints/

# In the docker
cd home/felice/command_interaction/ROS/hri_ws/
source devel/setup.bash
# FOR DEMO FELICE RESET THE "UNIQUE_CMD_LIST" TO THE RIGHT COMMANDS
roslaunch gesture_pkg hri_demo_webview.launch   # server-ip:    jetson-localhost:5000
# Address for visualization: http://10.0.1.222:5000/
# Open with Google Chrome

'''For connect to another ROS core inside local network'''
export ROS_MASTER_URI=http://10.68.0.1:11311 && export ROS_IP=10.68.0.128

'''For FELICE'''
roslaunch speech_pkg start_felice.launch    # SCR experiemntation
roslaunch speech_pkg start.launch           # MSI experiemntation

# roslaunch gesture_pkg gesture_demo_felice.launch
# roslaunch gesture_pkg gesture_demo_pepper.launch
# roslaunch gesture_pkg gesture_demo_webview.launch

# roslaunch webserver_pkg gesture_demo.launch

# Shows connected devices
cat /proc/asound/cards

# FIROS
contextbroaker: ip the context broaker (es. macchina virtuale)

# Visual Studio Code
https://code.visualstudio.com/download	# download .deb version
sudo dpkg -i code_1.68.1-1655262036_arm64.deb
sudo apt install apt-transport-https
sudo apt update
sudo apt install code

# JTop
sudo apt-get install python3-pip
sudo -H pip3 install -U jetson-stats

# GitHub
git config --global user.email "sbini@unisa.it"
git config --global user.name "stefanobini"
git config --global credential.helper store

git pull --no-edit

git checkout -b fiware
git push -u origin fiware

# FIWARE
CONTEXT_BROAKER = "192.168.2.106"
curl http://192.168.1.106:1026/v2/entities/UNISA.SpeechGestureAnalysis.SystemHealth:ac55f166-037c-11ed-a48a-d8c0a69b3641 -s -S -X DELETE
curl http://25.45.111.204:1026/v2/entities/UNISA.SpeechGestureAnalysis.Speech?type={UserInput} -s -S -X DELETE

# To detect audio device
python3 -m pip install sounddevice
python -m sounddevice