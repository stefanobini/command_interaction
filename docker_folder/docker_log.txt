DEPRECATED: The legacy builder is deprecated and will be removed in a future release.
            Install the buildx component to build images with BuildKit:
            https://docs.docker.com/go/buildx/

Sending build context to Docker daemon   7.68kB
Step 1/37 : FROM dustynv/l4t-ml:r35.2.1
 ---> 4b83e4db86d8
Step 2/37 : RUN apt-get update && apt-get install net-tools && yes | apt-get install curl
 ---> Using cache
 ---> 49e71dacb684
Step 3/37 : RUN yes | apt-get install apt-utils
 ---> Using cache
 ---> e151a91127b5
Step 4/37 : RUN apt-get update && apt-get install -y lsb-release && apt-get clean all
 ---> Using cache
 ---> 42fadcebd6fb
Step 5/37 : RUN apt-get update && apt-get install -q -y --no-install-recommends     dirmngr     gnupg2     && rm -rf /var/lib/apt/lists/*
 ---> Using cache
 ---> bbfbd88c64fc
Step 6/37 : RUN apt update
 ---> Using cache
 ---> 414e639ea531
Step 7/37 : RUN sh -c 'echo "deb http://packages.ros.org/ros/ubuntu $(lsb_release -sc) main" > /etc/apt/sources.list.d/ros-latest.list'
 ---> Using cache
 ---> 3e13ec669fa9
Step 8/37 : RUN curl -s https://raw.githubusercontent.com/ros/rosdistro/master/ros.asc | sudo apt-key add -
 ---> Using cache
 ---> 8e3abbccdd86
Step 9/37 : RUN apt update
 ---> Using cache
 ---> 64d5267a7e57
Step 10/37 : RUN yes | apt install ros-noetic-ros-base
 ---> Using cache
 ---> 021626964c48
Step 11/37 : RUN yes | apt install python3-rosdep python3-rosinstall python3-rosinstall-generator python3-wstool build-essential
 ---> Using cache
 ---> 7f95bf3c3923
Step 12/37 : RUN yes | apt install python3-catkin-tools
 ---> Using cache
 ---> f302cf66e6ad
Step 13/37 : RUN apt install python3-rosdep
 ---> Using cache
 ---> 5de2e9bc2b6d
Step 14/37 : RUN apt install -y ros-noetic-vision-msgs
 ---> Using cache
 ---> 7dee8fba47ef
Step 15/37 : RUN rosdep init
 ---> Using cache
 ---> 92c5023af492
Step 16/37 : RUN rosdep update
 ---> Using cache
 ---> 44093133f769
Step 17/37 : RUN python3 -m pip install --upgrade pip
 ---> Using cache
 ---> 43e2e3820562
Step 18/37 : RUN apt-get update &&     apt-get install -y --no-install-recommends         portaudio19-dev         python-all-dev         python3-all-dev         flac
 ---> Using cache
 ---> e91f1b11ac53
Step 19/37 : RUN python3 -m pip install         PyAudio==0.2.11         pyusb==1.0.2         click==7.1.2
 ---> Using cache
 ---> aab4cbb4f9f0
Step 20/37 : RUN python3 -m pip install dotmap
 ---> Using cache
 ---> 24ff9d42503a
Step 21/37 : RUN python3 -m pip install colorama
 ---> Using cache
 ---> 2345ac483e09
Step 22/37 : RUN python3 -m pip install netifaces
 ---> Using cache
 ---> 926d1698f585
Step 23/37 : RUN python3 -m pip install cvbridge3
 ---> Using cache
 ---> 5d7b43d30a31
Step 24/37 : RUN python3 -m pip install Pillow
 ---> Using cache
 ---> 0f75f342b2b7
Step 25/37 : RUN python3 -m pip install SpeechRecognition
 ---> Using cache
 ---> 62300697f994
Step 26/37 : RUN python3 -m pip install sounddevice
 ---> Using cache
 ---> 672e79a62692
Step 27/37 : RUN python3 -m pip install webrtcvad
 ---> Using cache
 ---> 8a30785e4788
Step 28/37 : RUN python3 -m pip install soundfile
 ---> Using cache
 ---> 6ec156e84d28
Step 29/37 : RUN python3 -m pip install librosa
 ---> Using cache
 ---> 18979752e2ab
Step 30/37 : RUN python3 -m pip install pytorch-lightning PyYAML==5.3.1
 ---> Using cache
 ---> aba06d79d135
Step 31/37 : RUN python3 -m pip install flask blinker==1.4
 ---> Using cache
 ---> 5ccbce28eed8
Step 32/37 : RUN apt install python3-opencv -y
 ---> Using cache
 ---> 55ece4d92a71
Step 33/37 : RUN apt-get update
 ---> Running in 97d0844f1a12
Hit:1 http://ports.ubuntu.com/ubuntu-ports focal InRelease
Get:2 http://ports.ubuntu.com/ubuntu-ports focal-updates InRelease [114 kB]
Hit:3 http://ports.ubuntu.com/ubuntu-ports focal-backports InRelease
Get:4 http://ports.ubuntu.com/ubuntu-ports focal-security InRelease [114 kB]
Hit:5 http://packages.ros.org/ros/ubuntu focal InRelease
Hit:6 https://repo.download.nvidia.com/jetson/common r35.2 InRelease
Fetched 228 kB in 7s (32.4 kB/s)
Reading package lists...
Removing intermediate container 97d0844f1a12
 ---> 4766fd5587c4
Step 34/37 : RUN curl https://sh.rustup.rs -sSf | sh -s -- --default-toolchain nightly -y
 ---> Running in df3d35c66be1
[91minfo: downloading installer
[0m[91minfo: profile set to 'default'
info: default host triple is aarch64-unknown-linux-gnu
[0m[91minfo: syncing channel updates for 'nightly-aarch64-unknown-linux-gnu'
[0m[91minfo: latest update on 2024-05-22, rust version 1.80.0-nightly (791adf759 2024-05-21)
info: downloading component 'cargo'
[0m[91minfo: downloading component 'clippy'
[0m[91minfo: downloading component 'rust-docs'
[0m[91minfo: downloading component 'rust-std'
[0m[91minfo: downloading component 'rustc'
[0m[91minfo: downloading component 'rustfmt'
[0m[91minfo: installing component 'cargo'
[0m[91minfo: installing component 'clippy'
[0m[91minfo: installing component 'rust-docs'
[0m[91minfo: installing component 'rust-std'
[0m[91minfo: installing component 'rustc'
[0m[91minfo: installing component 'rustfmt'[0m[91m
[0m[91minfo: default toolchain set to 'nightly-aarch64-unknown-linux-gnu'
[0m
  nightly-aarch64-unknown-linux-gnu installed - rustc 1.80.0-nightly (791adf759 2024-05-21)


Rust is installed now. Great!

To get started you may need to restart your current shell.
This would reload your PATH environment variable to include
Cargo's bin directory ($HOME/.cargo/bin).

To configure your current shell, you need to source
the corresponding env file under $HOME/.cargo.

This is usually done by running one of the following (note the leading DOT):
. "$HOME/.cargo/env"            # For sh/bash/zsh/ash/dash/pdksh
source "$HOME/.cargo/env.fish"  # For fish
Removing intermediate container df3d35c66be1
 ---> 25d25250c9d3
Step 35/37 : ENV PATH="/root/.cargo/bin:${PATH}"
 ---> Running in c1b2c6ae0bde
Removing intermediate container c1b2c6ae0bde
 ---> f8f6fbcd6268
Step 36/37 : RUN apt install libsndfile1 -y
 ---> Running in 2a9707c742b5
[91m
WARNING: apt does not have a stable CLI interface. Use with caution in scripts.

[0mReading package lists...
Building dependency tree...
Reading state information...
libsndfile1 is already the newest version (1.0.28-7ubuntu0.2).
libsndfile1 set to manually installed.
The following packages were automatically installed and are no longer required:
  gir1.2-gst-plugins-bad-1.0 libgtk2.0-0 libgtk2.0-common
Use 'apt autoremove' to remove them.
0 upgraded, 0 newly installed, 0 to remove and 131 not upgraded.
Removing intermediate container 2a9707c742b5
 ---> 98de031bdc0a
Step 37/37 : CMD ["bash"]
 ---> Running in b65373ec0aca
Removing intermediate container b65373ec0aca
 ---> a024e8c6ac4e
Successfully built a024e8c6ac4e
Successfully tagged eng_alfred_v0-image:latest
